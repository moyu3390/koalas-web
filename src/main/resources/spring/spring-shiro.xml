<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-4.2.xsd" default-lazy-init="true">

	<description>Shiro安全配置</description>
	<!-- Shiro的主要业务层对象基于web的应用程序 -->

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<!-- 单机环境下缓存配置 -->
		 <property name="cacheManager" ref="shiroEhcacheManager" />
		<!-- 集群环境下缓存配置 -->
		<!-- <property name="cacheManager" ref="customShiroCacheManager" /> -->
		<property name="sessionManager" ref="sessionManager"/>
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>

     <!-- 会话管理器 -->
	  <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	    <property name="globalSessionTimeout" value="18000000"/>
	    <property name="deleteInvalidSessions" value="true"/>
	    <property name="sessionIdCookieEnabled" value="true"/>
	    <property name="sessionIdCookie" ref="sessionIdCookie"/>
	    <!--  单机环境下不需要注入 -->
	   <!--  <property name="sessionDAO" ref="customShiroSessionDAO"/> -->
	  </bean>
	  
	   <!--  单机环境下不需要注入 -->
	  <bean id="customShiroSessionDAO" class="com.muze.core.app.session.cluster.CustomShiroSessionDAO">
        <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
      </bean>
	  
	  <!-- custom save session by redis class impl ShiroSessionRepository interface -->
      <bean id="jedisShiroSessionRepository" class="com.muze.core.app.session.cluster.JedisShiroSessionRepository">
        <property name="jedisManager" ref="jedisManager"/>
      </bean>
	  
	  <!-- redis manager class -->
      <bean id="jedisManager" class="com.muze.core.app.redis.JedisManager">
         <property name="jedisPool" ref="jedisPool"/>
      </bean>
	  
	  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="${muze.session.maxActive}"/>
        <property name="maxIdle" value="${muze.session.maxIdle}"/>
        <property name="minIdle" value="${muze.session.minIdle}"/>
        <property name="maxWait" value="${muze.session.maxWait}"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
      </bean>

      <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${muze.session.host}"/>
        <constructor-arg index="2" value="${muze.session.port}"/>
        <constructor-arg index="3" value="${muze.session.timeout}"/>
        <!-- <constructor-arg index="4" value="password"/> -->
      </bean>

       <!-- 会话Cookie模板 -->
	  <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="sid"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="-1"/>
	  </bean>

      <!-- rememberMe管理器 -->
	  <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
	    <property name="cipherKey"
	          value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
	    <property name="cookie" ref="rememberMeCookie"/>
	  </bean>
      
      <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg value="rememberMe"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="2592000"/>
	    <!-- 30天 -->
    </bean>

	 <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
	    <property name="arguments" ref="securityManager"/>
	  </bean>

	<bean id="myRealm" class="com.muze.core.app.login.shiro.MyRealm" />

	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter" />
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login/userLogin.do" />
		<property name="successUrl" value="/" />
		<property name="unauthorizedUrl" value="/login/unauthorized.do" />  
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login/** = anon
				/css/** = anon
				/easyui/** = anon
				/icons/** = anon
				/inc/** = anon
				/js/** = anon
				/** =authc
			</value>
		</property>
	</bean>

    <!-- 用户授权信息Cache, 采用EhCache ,非集群环境下 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:spring/ehcache-shiro.xml"/>
	</bean>
	
	<!-- cache集群环境下配置 -->
	<!-- custom shiro authorization info cache manager class-->
    <bean id="customShiroCacheManager" class="com.muze.core.app.cache.cluster.CustomShiroCacheManager">
        <property name="shiroCacheManager" ref="jedisShiroCacheManager"/>
    </bean>
    
    <!-- ShiroCacheManager interface impl class by redis,save authorization info to redis -->
    <bean id="jedisShiroCacheManager" class="com.muze.core.app.cache.cluster.JedisShiroCacheManager">
        <property name="jedisManager" ref="jedisManager"/>
    </bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">  
            <property name="proxyTargetClass" value="true" />   
   </bean>  -->
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>

</beans>