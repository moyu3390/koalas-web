<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muze.core.app.task.dao.TaskLogDao">

	<resultMap id="BaseResultMap" type="com.muze.core.app.task.model.QuartzLogModel">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="task_id" property="taskId" jdbcType="VARCHAR" />
		<result column="task_name" property="taskName" jdbcType="VARCHAR" />
		<result column="task_begin_time" property="taskBeginTime" jdbcType="TIMESTAMP" />
		<result column="task_end_time" property="taskEndTime" jdbcType="TIMESTAMP" />
		<result column="task_result" property="taskResult" jdbcType="CHAR" />
	</resultMap>
	
	<resultMap id="ResultMapWithBLOBs"
		type="com.muze.core.app.task.model.QuartzLogModel" extends="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="task_running_message" property="taskRunningMessage"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, task_id, task_name, DATE_FORMAT(task_begin_time,'%Y-%m-%d %H:%i:%s') task_begin_time, DATE_FORMAT(task_end_time,'%Y-%m-%d %H:%i:%s') task_end_time, task_result
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		task_running_message
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from qrtz_log
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from qrtz_log
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.muze.core.app.task.model.QuartzLogModel">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into qrtz_log (task_id, task_name,
		task_begin_time, task_end_time, task_result,
		task_running_message)
		values (#{taskId,jdbcType=VARCHAR},
		#{taskName,jdbcType=VARCHAR},
		#{taskBeginTime,jdbcType=TIMESTAMP}, #{taskEndTime,jdbcType=TIMESTAMP}, #{taskResult,jdbcType=CHAR},
		#{taskRunningMessage,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.muze.core.app.task.model.QuartzLogModel">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into qrtz_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="taskId != null">
				task_id,
			</if>
			<if test="taskName != null">
				task_name,
			</if>
			<if test="taskBeginTime != null">
				task_begin_time,
			</if>
			<if test="taskEndTime != null">
				task_end_time,
			</if>
			<if test="taskResult != null">
				task_result,
			</if>
			<if test="taskRunningMessage != null">
				task_running_message,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="taskId != null">
				#{taskId,jdbcType=VARCHAR},
			</if>
			<if test="taskName != null">
				#{taskName,jdbcType=VARCHAR},
			</if>
			<if test="taskBeginTime != null">
				#{taskBeginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskEndTime != null">
				#{taskEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskResult != null">
				#{taskResult,jdbcType=CHAR},
			</if>
			<if test="taskRunningMessage != null">
				#{taskRunningMessage,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.muze.core.app.task.model.QuartzLogModel">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update qrtz_log
		<set>
			<if test="taskId != null">
				task_id = #{taskId,jdbcType=VARCHAR},
			</if>
			<if test="taskName != null">
				task_name = #{taskName,jdbcType=VARCHAR},
			</if>
			<if test="taskBeginTime != null">
				task_begin_time = #{taskBeginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskEndTime != null">
				task_end_time = #{taskEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="taskResult != null">
				task_result = #{taskResult,jdbcType=CHAR},
			</if>
			<if test="taskRunningMessage != null">
				task_running_message = #{taskRunningMessage,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.muze.core.app.task.model.QuartzLogModel">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update qrtz_log
		set task_id = #{taskId,jdbcType=VARCHAR},
		task_name = #{taskName,jdbcType=VARCHAR},
		task_begin_time = #{taskBeginTime,jdbcType=TIMESTAMP},
		task_end_time = #{taskEndTime,jdbcType=TIMESTAMP},
		task_result = #{taskResult,jdbcType=CHAR},
		task_running_message = #{taskRunningMessage,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.muze.core.app.task.model.QuartzLogModel">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update qrtz_log
		set task_id = #{taskId,jdbcType=VARCHAR},
		task_name = #{taskName,jdbcType=VARCHAR},
		task_begin_time = #{taskBeginTime,jdbcType=TIMESTAMP},
		task_end_time = #{taskEndTime,jdbcType=TIMESTAMP},
		task_result = #{taskResult,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<insert id="insertBefore">
		insert into qrtz_log(task_id,task_name,task_begin_time)
		values(
		#{taskModel.task_id,jdbcType=VARCHAR},
		#{taskModel.task_name,jdbcType=VARCHAR},
		now()
		)
	</insert>

	<update id="updateAfter">
		update qrtz_log
		set task_end_time = now(),
		task_result = #{task_result,jdbcType=CHAR},
		task_running_message = #{task_running_message,jdbcType=VARCHAR}
		where task_id = #{taskModel.task_id,jdbcType=VARCHAR}
		and id = (select id from  (select ifnull(max(b.id),0) id from qrtz_log b where b.task_id = #{taskModel.task_id,jdbcType=VARCHAR}) a)
	</update>
	
	<select id="getAllTaskLogs" resultMap="ResultMapWithBLOBs">
	 select 
     <include refid="Base_Column_List" />
		,
	 <include refid="Blob_Column_List" />
	 from qrtz_log
	</select>

</mapper>